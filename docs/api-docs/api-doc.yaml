---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: v1
  title: test-storage API
  description: |
    The first version of the test-storage API


################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: example.com
basePath: /api/v1
schemes:
  - http
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /testcases:
    post:
      description: Creates a new testcase in the store.  Duplicates are allowed
      produces:
        - application/json
      parameters:
        - name: testcase
          in: body
          description: testcase to add to the store
          required: true
          schema:
            $ref: '#/definitions/newTestcase'
      responses:
        '200':
          description: testcase response
          schema:
            $ref: '#/definitions/testcase'
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/error'
        '401':
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Internal server error"
          schema:
            $ref: '#/definitions/error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    get:
      description: Returns all testcases
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        - name: fields
          in: query
          description: fields in results to return
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      responses:
        '200':
          description: testcases response
          schema:
            type: array
            items:
              $ref: '#/definitions/testcase'
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/error'
        '401':
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "Not Found"
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Internal server error"
          schema:
            $ref: '#/definitions/error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
  /testcases/{id}:
    get:
      description: Returns single testcase
      produces:
        - application/json
      parameters:
        - name: fields
          in: query
          description: fields in results to return
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      responses:
        '200':
          description: testcase response
          schema:
            type: object
            $ref: '#/definitions/testcase'
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/error'
        '401':
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "Not Found"
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Internal server error"
          schema:
            $ref: '#/definitions/error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    put:
      description: Update single testcase
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of testcase to update
          required: true
          type: string
          format: uuid
        - name: testcase
          in: body
          description: The testcase JSON you want to update
          schema:
            $ref: '#/definitions/updateTestcase'
          required: true
      responses:
        '200':
          description: testcase response
          schema:
            type: object
            $ref: '#/definitions/testcase'
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/error'
        '401':
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "Not Found"
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Internal server error"
          schema:
            $ref: '#/definitions/error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      description: Deletes a single testcase based on the ID supplied
      parameters:
        - name: id
          in: path
          description: ID of testcase to delete
          required: true
          type: string
          format: uuid
      responses:
        '204':
          description: Testcase successfully deleted
        '400':
          description: "Bad request"
          schema:
            $ref: '#/definitions/error'
        '401':
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/error'
        '404':
          description: "Not Found"
          schema:
            $ref: '#/definitions/error'
        '500':
          description: "Internal server error"
          schema:
            $ref: '#/definitions/error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error'
definitions:
  testcase:
    type: object
    properties:
      id:
        type: string
        format: uuid
      key:
        type: string
      parentId:
        type: string
        format: uuid
      priority:
        type: integer
        format: int32
      order:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      prerequisites:
        type: string
      steps:
        type: array
      expected:
        type: array
      tags:
        type: array
      created:
        type: date
      updated:
        type: date
      createdBy:
        type: string
        format: uuid
      updatedBy:
        type: string
        format: uuid
      enabled:
        type: boolean
      isAutomated:
        type: boolean
      estimate:
        type: integer
        format: int32
      status:
        type: string
      childId:
        type: integer
        format: int32
  newTestcase:
    type: object
    required:
      - key
      - parentId
      - priority
      - name
      - steps
      - expected
      - createdBy
      - enabled
    properties:
      key:
        type: string
      parentId:
        type: string
        format: uuid
      priority:
        type: integer
        format: int32
      order:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      prerequisites:
        type: string
      steps:
        type: array
      expected:
        type: array
      tags:
        type: array
      createdBy:
        type: string
        format: uuid
      enabled:
        type: boolean
      isAutomated:
        type: boolean
      estimate:
        type: integer
        format: int32
      childId:
        type: integer
        format: int32
  updateTestcase:
    type: object
    required:
      - key
      - parentId
      - priority
      - name
      - steps
      - expected
      - updated
      - updatedBy
      - enabled
    properties:
      key:
        type: string
      parentId:
        type: string
        format: uuid
      priority:
        type: integer
        format: int32
      order:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      prerequisites:
        type: string
      steps:
        type: array
      expected:
        type: array
      tags:
        type: array
      updated:
        type: date
      updatedBy:
        type: string
        format: uuid
      enabled:
        type: boolean
      isAutomated:
        type: boolean
      estimate:
        type: integer
        format: int32
      status:
        type: string
      childId:
        type: integer
        format: int32
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string